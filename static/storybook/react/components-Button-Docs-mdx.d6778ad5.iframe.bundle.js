"use strict";(self.webpackChunk_compassion_design_system_react=self.webpackChunk_compassion_design_system_react||[]).push([[527,747],{"../../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents=useMDXComponents(components);return disableParentContext&&(allComponents=components||emptyObject),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"../../node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Dx:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Dx,Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,ZX:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.ZX,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_});__webpack_require__("../../node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs")},"./src/components/Button/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Emphasis:()=>Emphasis,Kinds:()=>Kinds,Playground:()=>Playground,Size:()=>Size,State:()=>State,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var Button=__webpack_require__("./src/components/Button/Button.tsx"),Icon=__webpack_require__("./src/components/Icon/Icon.tsx");const wrappingElementComment="The wrapping element is only used for Storybook layout and can be removed from your code.";var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Button_stories={title:"Components/Button",component:Button.Z},iconArgTypes={control:{type:"select"},options:Object.keys(Icon.$z).sort()},Default={args:{label:"Button Label"}},Playground={args:{label:"Controlled Button"},argTypes:{emphasis:{control:{type:"select"},options:["primary","secondary","tertiary"]},kind:{control:{type:"select"},options:["default","cta","white","inverted","destructive"]},size:{control:{type:"select"},options:["small","medium","large"]},disabled:{control:{type:"select"},options:[!0,!1]},icon:iconArgTypes,iconDescription:{control:"text"},iconPosition:{control:{type:"select"},options:["start","end"]},showLabel:{control:{type:"select"},options:[!0,!1]}}},Kinds=args=>(0,jsx_runtime.jsxs)("div",{className:"cds-storybook__story__wrap","data-comment":wrappingElementComment,children:[(0,jsx_runtime.jsx)(Button.Z,{label:"Default"}),(0,jsx_runtime.jsx)(Button.Z,{label:"CTA",kind:"cta"}),(0,jsx_runtime.jsx)(Button.Z,{label:"White",kind:"white"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Inverted",kind:"inverted"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Destructive",kind:"destructive"})]});Kinds.displayName="Kinds";const Emphasis=args=>(0,jsx_runtime.jsxs)("div",{className:"cds-storybook__story__wrap","data-comment":wrappingElementComment,children:[(0,jsx_runtime.jsx)(Button.Z,{label:"Primary",emphasis:"primary"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Secondary",emphasis:"secondary"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Tertiary",emphasis:"tertiary"})]});Emphasis.displayName="Emphasis";const Size=args=>(0,jsx_runtime.jsxs)("div",{className:"cds-storybook__story__wrap","data-comment":wrappingElementComment,children:[(0,jsx_runtime.jsx)(Button.Z,{label:"Small",size:"small"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Medium",size:"medium"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Large",size:"large"})]});Size.displayName="Size";const State=args=>(0,jsx_runtime.jsx)("div",{className:"cds-storybook__story__wrap","data-comment":wrappingElementComment,children:(0,jsx_runtime.jsx)(Button.Z,{label:"Disabled",disabled:!0})});State.displayName="State";const WithIcon=args=>(0,jsx_runtime.jsxs)("div",{className:"cds-storybook__story__wrap","data-comment":wrappingElementComment,children:[(0,jsx_runtime.jsx)(Button.Z,{label:"Icon Start",icon:"compass"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Icon End",icon:"arrowRight",iconPosition:"end"}),(0,jsx_runtime.jsx)(Button.Z,{label:"Confirm choices",icon:"check",showLabel:!1})]});WithIcon.displayName="WithIcon",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Button Label'\n  }\n}",...Default.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Controlled Button'\n  },\n  argTypes: {\n    emphasis: emphasisArgTypes,\n    kind: kindArgTypes,\n    size: sizeArgTypes,\n    disabled: disabledArgTypes,\n    icon: iconArgTypes,\n    iconDescription: iconDescriptionArgType,\n    iconPosition: iconPositionArgTypes,\n    showLabel: showLabelArgTypes\n  }\n}",...Playground.parameters?.docs?.source}}},Kinds.parameters={...Kinds.parameters,docs:{...Kinds.parameters?.docs,source:{originalSource:'args => <div className={wrappingElementClass} data-comment={wrappingElementComment}>\n    <Button label="Default" />\n    <Button label="CTA" kind="cta" />\n    <Button label="White" kind="white" />\n    <Button label="Inverted" kind="inverted" />\n    <Button label="Destructive" kind="destructive" />\n  </div>',...Kinds.parameters?.docs?.source}}},Emphasis.parameters={...Emphasis.parameters,docs:{...Emphasis.parameters?.docs,source:{originalSource:'args => <div className={wrappingElementClass} data-comment={wrappingElementComment}>\n    <Button label="Primary" emphasis="primary" />\n    <Button label="Secondary" emphasis="secondary" />\n    <Button label="Tertiary" emphasis="tertiary" />\n  </div>',...Emphasis.parameters?.docs?.source}}},Size.parameters={...Size.parameters,docs:{...Size.parameters?.docs,source:{originalSource:'args => <div className={wrappingElementClass} data-comment={wrappingElementComment}>\n    <Button label="Small" size="small" />\n    <Button label="Medium" size="medium" />\n    <Button label="Large" size="large" />\n  </div>',...Size.parameters?.docs?.source}}},State.parameters={...State.parameters,docs:{...State.parameters?.docs,source:{originalSource:'args => <div className={wrappingElementClass} data-comment={wrappingElementComment}>\n    <Button label="Disabled" disabled />\n  </div>',...State.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:'args => <div className={wrappingElementClass} data-comment={wrappingElementComment}>\n    <Button label="Icon Start" icon="compass" />\n    <Button label="Icon End" icon="arrowRight" iconPosition="end" />\n    <Button label="Confirm choices" icon="check" showLabel={false} />\n  </div>',...WithIcon.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Playground","Kinds","Emphasis","Size","State","WithIcon"];try{Kinds.displayName="Kinds",Kinds.__docgenInfo={description:"",displayName:"Kinds",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.stories.tsx#Kinds"]={docgenInfo:Kinds.__docgenInfo,name:"Kinds",path:"src/components/Button/Button.stories.tsx#Kinds"})}catch(__react_docgen_typescript_loader_error){}try{Emphasis.displayName="Emphasis",Emphasis.__docgenInfo={description:"",displayName:"Emphasis",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.stories.tsx#Emphasis"]={docgenInfo:Emphasis.__docgenInfo,name:"Emphasis",path:"src/components/Button/Button.stories.tsx#Emphasis"})}catch(__react_docgen_typescript_loader_error){}try{Size.displayName="Size",Size.__docgenInfo={description:"",displayName:"Size",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.stories.tsx#Size"]={docgenInfo:Size.__docgenInfo,name:"Size",path:"src/components/Button/Button.stories.tsx#Size"})}catch(__react_docgen_typescript_loader_error){}try{State.displayName="State",State.__docgenInfo={description:"",displayName:"State",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.stories.tsx#State"]={docgenInfo:State.__docgenInfo,name:"State",path:"src/components/Button/Button.stories.tsx#State"})}catch(__react_docgen_typescript_loader_error){}try{WithIcon.displayName="WithIcon",WithIcon.__docgenInfo={description:"",displayName:"WithIcon",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Button/Button.stories.tsx#WithIcon"]={docgenInfo:WithIcon.__docgenInfo,name:"WithIcon",path:"src/components/Button/Button.stories.tsx#WithIcon"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Button/Docs.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>Docs});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs"),addon_docs_dist=__webpack_require__("../../node_modules/@storybook/addon-docs/dist/index.mjs"),Button_stories=__webpack_require__("./src/components/Button/Button.stories.tsx");const Docs=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,{})})):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h2:"h2"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(addon_docs_dist.h_,{of:Button_stories}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Dx,{}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:"## Overview\n\nThe button component is an interactive element that can be used to trigger an action or change the state of an interface element.\n"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{of:Button_stories.Default,sourceState:"shown",withToolbar:"true"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.ZX,{of:Button_stories.Default}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:"## Usage\n\nButtons can be used in a variety of contexts throughout a design. They are particularly useful for triggering actions such as submitting a form, opening a modal, or navigating to a different page. They can also be used to change the state of an interface element, such as toggling a setting on or off.\n"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"component-properties",children:"Component Properties"}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:'### Kind\n\n- **Default:** A typical button style that can be used in most contexts and uses the primary brand color.\n- **CTA:** Stands for "Call to Action". This button style is used to draw attention to the most important action on a page.\n- **White:** A button style that is used on a dark background. The text is usually dark and the button itself is usually light.\n- **Inverted:** A button style that is used on a light background. The text is usually light and the button itself is usually dark.\n- **Destructive:** A button style that is used to indicate that an action will have a negative consequence, such as deleting data.\n'}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{of:Button_stories.Kinds}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:"### Emphasis\n\n- **Primary:** Should be used for primary actions or to draw the user's attention. The color and style of the primary button are designed to stand out on the page.\n- **Secondary:** For less prominent actions and should be used alongside primary buttons as a secondary option.\n- **Tertiary:** The least prominent and should be used for less important actions, or when the design requires a more subtle button.\n"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{of:Button_stories.Emphasis}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:"### Size\n\n- **Medium:** For most contexts and is easy to interact with on both desktop and mobile devices.\n- **Small:** For situations where space is limited or when multiple buttons need to be displayed in close proximity.\n- **Large:** Used to draw attention to a specific action or for use on touch screens where larger targets are needed.\n"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{of:Button_stories.Size}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:"### State\n\n- **Default:** The normal appearance of a button when it is not being interacted with. It is usually a solid color with text that indicates the action the button will perform when clicked.\n- **Hover:** When the user hovers their mouse over the button. It is usually a subtle change in appearance, such as a color change, to indicate to the user that the button is interactive.\n- **Disabled:** The appearance of a button when it cannot be interacted with. This is typically used when the user has not filled out a required form field or when the user is not authorized to perform a certain action. The button is usually grayed out or has a different opacity to indicate that it is not active.\n"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{of:Button_stories.State}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:"### Other Properties\n\n- **Icons**: Optional icons can be added to the right or left of the button text to provide additional context to the user.\n- **Text Visibility**: The button text can be shown or hidden depending on the design requirements.\n"}),"\n",(0,jsx_runtime.jsx)(addon_docs_dist.Xz,{of:Button_stories.WithIcon}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:'## Best Practices\n\n- Ensure your buttons have clear labels. Users should be able to predict what will happen when they click a button. Avoid using generic labels like "Click here".\n- Only use CTA buttons to highlight the main call to action on a page.\n- Limit the number of actions a user can take at one time. If there are too many buttons on one page, it can lead to decision fatigue for the user.\n- Use button sizes that are large enough to accommodate finger targets for touch screens.\n'})]})}}}}]);