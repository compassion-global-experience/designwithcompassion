"use strict";(self.webpackChunk_compassion_gds_core=self.webpackChunk_compassion_gds_core||[]).push([[834],{"./src/components/Form/PIN.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,Error:()=>Error,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Forms/PIN",argTypes:{label:{control:"text"},size:{control:{type:"select"},options:["small","medium","large"]},state:{control:{type:"select"},options:["default","disabled","error"]}}},PinField=({label="Label Text",size="medium",state="default"})=>{const disabled="disabled"===state?"disabled":"";return`\n    <div class="form-field-row">\n      <div class="form-label-wrap">\n        <label class="form-label ${disabled}" for="test-field">\n          ${label}\n        </label>\n      </div>\n      <div class="pin-field ${size}">\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n      </div>\n    </div>\n    \n    <script>\n      var inputs = document.querySelectorAll("input");\n      inputs.forEach((input, key) => {\n        input.autocomplete = 'off';\n        input.addEventListener("keyup", function (event) {\n          if (event.key === 'Backspace') {\n            inputs[key - 1]?.focus();\n          }\n          else if (event.key?.length === 1 && /\\w/.test(event.key)) {\n            inputs[key + 1]?.focus();\n          }\n        });\n      });\n    <\/script>\n`},Default=PinField.bind({});Default.args={label:"Label Text"};const Disabled=PinField.bind({});Disabled.args={label:"Label Text",state:"disabled"};const Error=PinField.bind({});Error.args={label:"Label Text",state:"error"};const __namedExportsOrder=["Default","Disabled","Error"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'({\n  label = \'Label Text\',\n  size = \'medium\',\n  state = \'default\'\n}) => {\n  const disabled = state === \'disabled\' ? \'disabled\' : \'\';\n  return `\n    <div class="form-field-row">\n      <div class="form-label-wrap">\n        <label class="form-label ${disabled}" for="test-field">\n          ${label}\n        </label>\n      </div>\n      <div class="pin-field ${size}">\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n      </div>\n    </div>\n    \n    <script>\n      var inputs = document.querySelectorAll("input");\n      inputs.forEach((input, key) => {\n        input.autocomplete = \'off\';\n        input.addEventListener("keyup", function (event) {\n          if (event.key === \'Backspace\') {\n            inputs[key - 1]?.focus();\n          }\n          else if (event.key?.length === 1 && /\\\\w/.test(event.key)) {\n            inputs[key + 1]?.focus();\n          }\n        });\n      });\n    <\/script>\n`;\n}',...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'({\n  label = \'Label Text\',\n  size = \'medium\',\n  state = \'default\'\n}) => {\n  const disabled = state === \'disabled\' ? \'disabled\' : \'\';\n  return `\n    <div class="form-field-row">\n      <div class="form-label-wrap">\n        <label class="form-label ${disabled}" for="test-field">\n          ${label}\n        </label>\n      </div>\n      <div class="pin-field ${size}">\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n      </div>\n    </div>\n    \n    <script>\n      var inputs = document.querySelectorAll("input");\n      inputs.forEach((input, key) => {\n        input.autocomplete = \'off\';\n        input.addEventListener("keyup", function (event) {\n          if (event.key === \'Backspace\') {\n            inputs[key - 1]?.focus();\n          }\n          else if (event.key?.length === 1 && /\\\\w/.test(event.key)) {\n            inputs[key + 1]?.focus();\n          }\n        });\n      });\n    <\/script>\n`;\n}',...Disabled.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'({\n  label = \'Label Text\',\n  size = \'medium\',\n  state = \'default\'\n}) => {\n  const disabled = state === \'disabled\' ? \'disabled\' : \'\';\n  return `\n    <div class="form-field-row">\n      <div class="form-label-wrap">\n        <label class="form-label ${disabled}" for="test-field">\n          ${label}\n        </label>\n      </div>\n      <div class="pin-field ${size}">\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n        <div class="form-field ${state} ${disabled}">\n          <input class="form-input" type="password" maxlength=1 ${disabled} />\n        </div>\n      </div>\n    </div>\n    \n    <script>\n      var inputs = document.querySelectorAll("input");\n      inputs.forEach((input, key) => {\n        input.autocomplete = \'off\';\n        input.addEventListener("keyup", function (event) {\n          if (event.key === \'Backspace\') {\n            inputs[key - 1]?.focus();\n          }\n          else if (event.key?.length === 1 && /\\\\w/.test(event.key)) {\n            inputs[key + 1]?.focus();\n          }\n        });\n      });\n    <\/script>\n`;\n}',...Error.parameters?.docs?.source}}}}}]);